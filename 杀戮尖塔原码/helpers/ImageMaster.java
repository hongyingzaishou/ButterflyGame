// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ImageMaster.java

package com.megacrit.cardcrawl.helpers;

import com.badlogic.gdx.Files;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.TextureAtlas;
import com.megacrit.cardcrawl.helpers.controller.CInputHelper;
import com.megacrit.cardcrawl.relics.AbstractRelic;
import java.util.ArrayList;
import java.util.HashMap;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class ImageMaster
{

    public ImageMaster()
    {
    }

    public static void initialize()
    {
        long startTime = System.currentTimeMillis();
        vfxAtlas = new TextureAtlas(Gdx.files.internal("vfx/vfx.atlas"));
        DECK_GLOW_1 = vfxAtlas.findRegion("ui/p1");
        DECK_GLOW_2 = vfxAtlas.findRegion("ui/p2");
        DECK_GLOW_3 = vfxAtlas.findRegion("ui/p3");
        DECK_GLOW_4 = vfxAtlas.findRegion("ui/p4");
        DECK_GLOW_5 = vfxAtlas.findRegion("ui/p5");
        DECK_GLOW_6 = vfxAtlas.findRegion("ui/p6");
        SCENE_TRANSITION_FADER = vfxAtlas.findRegion("ui/topDownFader");
        DEATH_VFX_1 = vfxAtlas.findRegion("env/death1");
        DEATH_VFX_2 = vfxAtlas.findRegion("env/death2");
        DEATH_VFX_3 = vfxAtlas.findRegion("env/death3");
        DEATH_VFX_4 = vfxAtlas.findRegion("env/death4");
        DEATH_VFX_5 = vfxAtlas.findRegion("env/death5");
        DEATH_VFX_6 = vfxAtlas.findRegion("env/death6");
        DUST_1 = vfxAtlas.findRegion("env/dust1");
        DUST_2 = vfxAtlas.findRegion("env/dust2");
        DUST_3 = vfxAtlas.findRegion("env/dust3");
        DUST_4 = vfxAtlas.findRegion("env/dust4");
        DUST_5 = vfxAtlas.findRegion("env/dust5");
        DUST_6 = vfxAtlas.findRegion("env/dust6");
        SMOKE_1 = vfxAtlas.findRegion("env/smoke1");
        SMOKE_2 = vfxAtlas.findRegion("env/smoke2");
        SMOKE_3 = vfxAtlas.findRegion("env/smoke3");
        CONE_1 = vfxAtlas.findRegion("cone7");
        CONE_2 = vfxAtlas.findRegion("cone8");
        CONE_3 = vfxAtlas.findRegion("cone9");
        CONE_4 = vfxAtlas.findRegion("cone5");
        CONE_5 = vfxAtlas.findRegion("cone6");
        EXHAUST_L = vfxAtlas.findRegion("exhaust/bigBlur");
        EXHAUST_S = vfxAtlas.findRegion("exhaust/smallBlur");
        ATK_BLUNT_HEAVY = vfxAtlas.findRegion("attack/blunt_heavy");
        ATK_BLUNT_LIGHT = vfxAtlas.findRegion("attack/blunt_light");
        ATK_FIRE = vfxAtlas.findRegion("attack/fire");
        ATK_POISON = vfxAtlas.findRegion("attack/poison");
        ATK_SHIELD = vfxAtlas.findRegion("attack/shield");
        ATK_SLASH_HEAVY = vfxAtlas.findRegion("attack/slash_heavy");
        ATK_SLASH_H = vfxAtlas.findRegion("attack/slash_horizontal");
        ATK_SLASH_V = vfxAtlas.findRegion("attack/slash_vertical");
        ATK_SLASH_D = vfxAtlas.findRegion("attack/slash_light");
        ATK_SLASH_RED = vfxAtlas.findRegion("attack/slash1");
        ROOM_SHINE_1 = vfxAtlas.findRegion("shine1");
        ROOM_SHINE_2 = vfxAtlas.findRegion("shine2");
        COPPER_COIN_1 = vfxAtlas.findRegion("copperCoin");
        COPPER_COIN_2 = vfxAtlas.findRegion("copperCoin2");
        GRAB_COIN = vfxAtlas.findRegion("shineLines");
        FLAME_1 = vfxAtlas.findRegion("combat/flame4");
        FLAME_2 = vfxAtlas.findRegion("combat/flame5");
        FLAME_3 = vfxAtlas.findRegion("combat/flame6");
        STRIKE_LINE = vfxAtlas.findRegion("combat/strikeLine2");
        STRIKE_LINE_2 = vfxAtlas.findRegion("combat/strikeLine3");
        STRIKE_BLUR = vfxAtlas.findRegion("combat/blurDot");
        GLOW_SPARK = vfxAtlas.findRegion("glowSpark");
        GLOW_SPARK_2 = vfxAtlas.findRegion("glowSpark2");
        THICK_3D_LINE = vfxAtlas.findRegion("combat/spike");
        THICK_3D_LINE_2 = vfxAtlas.findRegion("combat/spike2");
        MOVE_NAME_BG = vfxAtlas.findRegion("combat/moveNameBg");
        VERTICAL_AURA = vfxAtlas.findRegion("combat/verticalAura");
        POWER_UP_1 = vfxAtlas.findRegion("combat/empowerCircle1");
        POWER_UP_2 = vfxAtlas.findRegion("combat/empowerCircle2");
        WOBBLY_LINE = vfxAtlas.findRegion("combat/wobblyLine");
        BLUR_WAVE = vfxAtlas.findRegion("combat/blurWave");
        DAGGER_STREAK = vfxAtlas.findRegion("combat/streak");
        WHITE_RING = vfxAtlas.findRegion("whiteRing");
        VERTICAL_IMPACT = vfxAtlas.findRegion("combat/verticalImpact");
        BORDER_GLOW = vfxAtlas.findRegion("borderGlow");
        BORDER_GLOW_2 = vfxAtlas.findRegion("borderGlow2");
        UPGRADE_HAMMER_IMPACT = vfxAtlas.findRegion("ui/hammerImprint");
        UPGRADE_HAMMER_LINE = vfxAtlas.findRegion("ui/impactLineThick");
        CRYSTAL_IMPACT = vfxAtlas.findRegion("blurRing");
        TORCH_FIRE_1 = vfxAtlas.findRegion("env/fire1");
        TORCH_FIRE_2 = vfxAtlas.findRegion("env/fire2");
        TORCH_FIRE_3 = vfxAtlas.findRegion("env/fire3");
        TINY_STAR = vfxAtlas.findRegion("combat/tinyStar2");
        EYE_ANIM_0 = vfxAtlas.findRegion("combat/stance/eye0");
        EYE_ANIM_1 = vfxAtlas.findRegion("combat/stance/eye1");
        EYE_ANIM_2 = vfxAtlas.findRegion("combat/stance/eye2");
        EYE_ANIM_3 = vfxAtlas.findRegion("combat/stance/eye3");
        EYE_ANIM_4 = vfxAtlas.findRegion("combat/stance/eye4");
        EYE_ANIM_5 = vfxAtlas.findRegion("combat/stance/eye5");
        EYE_ANIM_6 = vfxAtlas.findRegion("combat/stance/eye6");
        CHAR_SELECT_IRONCLAD = loadImage("images/ui/charSelect/ironcladButton.png");
        CHAR_SELECT_SILENT = loadImage("images/ui/charSelect/silentButton.png");
        CHAR_SELECT_DEFECT = loadImage("images/ui/charSelect/defectButton.png");
        CHAR_SELECT_WATCHER = loadImage("images/ui/charSelect/watcherButton.png");
        CHAR_SELECT_LOCKED = loadImage("images/ui/charSelect/lockedButton.png");
        CHAR_SELECT_BG_IRONCLAD = loadImage("images/ui/charSelect/ironcladPortrait.jpg");
        CHAR_SELECT_BG_SILENT = loadImage("images/ui/charSelect/silentPortrait.jpg");
        CHAR_SELECT_BG_DEFECT = loadImage("images/ui/charSelect/defectPortrait.jpg");
        CHAR_SELECT_BG_WATCHER = loadImage("images/ui/charSelect/watcherPortrait.jpg");
        PROFILE_A = loadImage("images/ui/profile/1.png");
        PROFILE_B = loadImage("images/ui/profile/2.png");
        PROFILE_C = loadImage("images/ui/profile/3.png");
        PROFILE_SLOT = loadImage("images/ui/profile/save_panel.png");
        PROFILE_DELETE = loadImage("images/ui/profile/delete_button.png");
        PROFILE_RENAME = loadImage("images/ui/profile/rename_button.png");
        cardUiAtlas = new TextureAtlas(Gdx.files.internal("cardui/cardui.atlas"));
        CARD_BACK = cardUiAtlas.findRegion("512/card_back");
        CARD_BG = cardUiAtlas.findRegion("512/card_bg");
        CARD_ATTACK_BG_PURPLE = cardUiAtlas.findRegion("512/bg_attack_purple");
        CARD_SKILL_BG_PURPLE = cardUiAtlas.findRegion("512/bg_skill_purple");
        CARD_POWER_BG_PURPLE = cardUiAtlas.findRegion("512/bg_power_purple");
        CARD_PURPLE_ORB = cardUiAtlas.findRegion("512/card_purple_orb");
        CARD_ATTACK_BG_RED = cardUiAtlas.findRegion("512/bg_attack_red");
        CARD_ATTACK_BG_GREEN = cardUiAtlas.findRegion("512/bg_attack_green");
        CARD_ATTACK_BG_BLUE = cardUiAtlas.findRegion("512/bg_attack_blue");
        CARD_ATTACK_BG_GRAY = cardUiAtlas.findRegion("512/bg_attack_gray");
        CARD_ATTACK_BG_SILHOUETTE = cardUiAtlas.findRegion("512/bg_attack_silhouette");
        CARD_SKILL_BG_RED = cardUiAtlas.findRegion("512/bg_skill_red");
        CARD_SKILL_BG_GREEN = cardUiAtlas.findRegion("512/bg_skill_green");
        CARD_SKILL_BG_BLUE = cardUiAtlas.findRegion("512/bg_skill_blue");
        CARD_SKILL_BG_BLACK = cardUiAtlas.findRegion("512/bg_skill_black");
        CARD_SKILL_BG_GRAY = cardUiAtlas.findRegion("512/bg_skill_gray");
        CARD_SKILL_BG_SILHOUETTE = cardUiAtlas.findRegion("512/bg_skill_silhouette");
        CARD_POWER_BG_RED = cardUiAtlas.findRegion("512/bg_power_red");
        CARD_POWER_BG_GREEN = cardUiAtlas.findRegion("512/bg_power_green");
        CARD_POWER_BG_BLUE = cardUiAtlas.findRegion("512/bg_power_blue");
        CARD_POWER_BG_GRAY = cardUiAtlas.findRegion("512/bg_power_gray");
        CARD_POWER_BG_SILHOUETTE = cardUiAtlas.findRegion("512/bg_power_silhouette");
        CARD_FRAME_ATTACK_COMMON = cardUiAtlas.findRegion("512/frame_attack_common");
        CARD_FRAME_ATTACK_UNCOMMON = cardUiAtlas.findRegion("512/frame_attack_uncommon");
        CARD_FRAME_ATTACK_RARE = cardUiAtlas.findRegion("512/frame_attack_rare");
        CARD_FRAME_SKILL_COMMON = cardUiAtlas.findRegion("512/frame_skill_common");
        CARD_FRAME_SKILL_UNCOMMON = cardUiAtlas.findRegion("512/frame_skill_uncommon");
        CARD_FRAME_SKILL_RARE = cardUiAtlas.findRegion("512/frame_skill_rare");
        CARD_FRAME_POWER_COMMON = cardUiAtlas.findRegion("512/frame_power_common");
        CARD_FRAME_POWER_UNCOMMON = cardUiAtlas.findRegion("512/frame_power_uncommon");
        CARD_FRAME_POWER_RARE = cardUiAtlas.findRegion("512/frame_power_rare");
        CARD_BANNER_COMMON = cardUiAtlas.findRegion("512/banner_common");
        CARD_BANNER_UNCOMMON = cardUiAtlas.findRegion("512/banner_uncommon");
        CARD_BANNER_RARE = cardUiAtlas.findRegion("512/banner_rare");
        CARD_RED_ORB = cardUiAtlas.findRegion("512/card_red_orb");
        CARD_GREEN_ORB = cardUiAtlas.findRegion("512/card_green_orb");
        CARD_BLUE_ORB = cardUiAtlas.findRegion("512/card_blue_orb");
        CARD_COLORLESS_ORB = cardUiAtlas.findRegion("512/card_colorless_orb");
        CARD_SUPER_SHADOW = cardUiAtlas.findRegion("512/card_super_shadow");
        CARD_COMMON_FRAME_LEFT = cardUiAtlas.findRegion("512/common_left");
        CARD_COMMON_FRAME_MID = cardUiAtlas.findRegion("512/common_center");
        CARD_COMMON_FRAME_RIGHT = cardUiAtlas.findRegion("512/common_right");
        CARD_UNCOMMON_FRAME_LEFT = cardUiAtlas.findRegion("512/uncommon_left");
        CARD_UNCOMMON_FRAME_MID = cardUiAtlas.findRegion("512/uncommon_center");
        CARD_UNCOMMON_FRAME_RIGHT = cardUiAtlas.findRegion("512/uncommon_right");
        CARD_RARE_FRAME_LEFT = cardUiAtlas.findRegion("512/rare_left");
        CARD_RARE_FRAME_MID = cardUiAtlas.findRegion("512/rare_center");
        CARD_RARE_FRAME_RIGHT = cardUiAtlas.findRegion("512/rare_right");
        CARD_FLASH_VFX = cardUiAtlas.findRegion("512/card_flash_vfx");
        CARD_LOCKED_ATTACK = loadImage("images/cards/locked_attack.png");
        CARD_LOCKED_SKILL = loadImage("images/cards/locked_skill.png");
        CARD_LOCKED_POWER = loadImage("images/cards/locked_power.png");
        CARD_ATTACK_BG_PURPLE_L = cardUiAtlas.findRegion("1024/bg_attack_purple");
        CARD_SKILL_BG_PURPLE_L = cardUiAtlas.findRegion("1024/bg_skill_purple");
        CARD_POWER_BG_PURPLE_L = cardUiAtlas.findRegion("1024/bg_power_purple");
        CARD_PURPLE_ORB_L = cardUiAtlas.findRegion("1024/card_purple_orb");
        CARD_ATTACK_BG_RED_L = cardUiAtlas.findRegion("1024/bg_attack_red");
        CARD_ATTACK_BG_GREEN_L = cardUiAtlas.findRegion("1024/bg_attack_green");
        CARD_ATTACK_BG_BLUE_L = cardUiAtlas.findRegion("1024/bg_attack_blue");
        CARD_ATTACK_BG_GRAY_L = cardUiAtlas.findRegion("1024/bg_attack_colorless");
        CARD_SKILL_BG_RED_L = cardUiAtlas.findRegion("1024/bg_skill_red");
        CARD_SKILL_BG_GREEN_L = cardUiAtlas.findRegion("1024/bg_skill_green");
        CARD_SKILL_BG_BLUE_L = cardUiAtlas.findRegion("1024/bg_skill_blue");
        CARD_SKILL_BG_GRAY_L = cardUiAtlas.findRegion("1024/bg_skill_colorless");
        CARD_SKILL_BG_BLACK_L = cardUiAtlas.findRegion("1024/bg_skill_black");
        CARD_POWER_BG_RED_L = cardUiAtlas.findRegion("1024/bg_power_red");
        CARD_POWER_BG_GREEN_L = cardUiAtlas.findRegion("1024/bg_power_green");
        CARD_POWER_BG_BLUE_L = cardUiAtlas.findRegion("1024/bg_power_blue");
        CARD_POWER_BG_GRAY_L = cardUiAtlas.findRegion("1024/bg_power_colorless");
        CARD_FRAME_ATTACK_COMMON_L = cardUiAtlas.findRegion("1024/frame_attack_common");
        CARD_FRAME_ATTACK_UNCOMMON_L = cardUiAtlas.findRegion("1024/frame_attack_uncommon");
        CARD_FRAME_ATTACK_RARE_L = cardUiAtlas.findRegion("1024/frame_attack_rare");
        CARD_FRAME_SKILL_COMMON_L = cardUiAtlas.findRegion("1024/frame_skill_common");
        CARD_FRAME_SKILL_UNCOMMON_L = cardUiAtlas.findRegion("1024/frame_skill_uncommon");
        CARD_FRAME_SKILL_RARE_L = cardUiAtlas.findRegion("1024/frame_skill_rare");
        CARD_FRAME_POWER_COMMON_L = cardUiAtlas.findRegion("1024/frame_power_common");
        CARD_FRAME_POWER_UNCOMMON_L = cardUiAtlas.findRegion("1024/frame_power_uncommon");
        CARD_FRAME_POWER_RARE_L = cardUiAtlas.findRegion("1024/frame_power_rare");
        CARD_BANNER_COMMON_L = cardUiAtlas.findRegion("1024/banner_common");
        CARD_BANNER_UNCOMMON_L = cardUiAtlas.findRegion("1024/banner_uncommon");
        CARD_BANNER_RARE_L = cardUiAtlas.findRegion("1024/banner_rare");
        CARD_RED_ORB_L = cardUiAtlas.findRegion("1024/card_red_orb");
        CARD_GREEN_ORB_L = cardUiAtlas.findRegion("1024/card_green_orb");
        CARD_BLUE_ORB_L = cardUiAtlas.findRegion("1024/card_blue_orb");
        CARD_GRAY_ORB_L = cardUiAtlas.findRegion("1024/card_colorless_orb");
        CARD_LOCKED_ATTACK_L = cardUiAtlas.findRegion("ocked_attack_l");
        CARD_LOCKED_SKILL_L = cardUiAtlas.findRegion("ocked_skill_l");
        CARD_LOCKED_POWER_L = cardUiAtlas.findRegion("ocked_power_l");
        CARD_COMMON_FRAME_LEFT_L = cardUiAtlas.findRegion("1024/common_left");
        CARD_COMMON_FRAME_MID_L = cardUiAtlas.findRegion("1024/common_center");
        CARD_COMMON_FRAME_RIGHT_L = cardUiAtlas.findRegion("1024/common_right");
        CARD_UNCOMMON_FRAME_LEFT_L = cardUiAtlas.findRegion("1024/uncommon_left");
        CARD_UNCOMMON_FRAME_MID_L = cardUiAtlas.findRegion("1024/uncommon_center");
        CARD_UNCOMMON_FRAME_RIGHT_L = cardUiAtlas.findRegion("1024/uncommon_right");
        CARD_RARE_FRAME_LEFT_L = cardUiAtlas.findRegion("1024/rare_left");
        CARD_RARE_FRAME_MID_L = cardUiAtlas.findRegion("1024/rare_center");
        CARD_RARE_FRAME_RIGHT_L = cardUiAtlas.findRegion("1024/rare_right");
        MERCHANT_RUG_IMG = loadImage("images/npcs/merchantObjects.png");
        POTION_UI_BG = loadImage("images/ui/potionPopUp/bg.png");
        POTION_UI_TOP = loadImage("images/ui/potionPopUp/top.png");
        POTION_UI_BOT = loadImage("images/ui/potionPopUp/bot.png");
        POTION_T_CONTAINER = loadImage("images/potion/potion_t_glass.png");
        POTION_T_LIQUID = loadImage("images/potion/potion_t_liquid.png");
        POTION_T_HYBRID = loadImage("images/potion/potion_t_hybrid.png");
        POTION_T_SPOTS = loadImage("images/potion/potion_t_spots.png");
        POTION_T_OUTLINE = loadImage("images/potion/potion_t_outline.png");
        POTION_S_CONTAINER = loadImage("images/potion/potion_s_glass.png");
        POTION_S_LIQUID = loadImage("images/potion/potion_s_liquid.png");
        POTION_S_HYBRID = loadImage("images/potion/potion_s_hybrid.png");
        POTION_S_SPOTS = loadImage("images/potion/potion_s_spots.png");
        POTION_S_OUTLINE = loadImage("images/potion/potion_s_outline.png");
        POTION_M_CONTAINER = loadImage("images/potion/potion_m_glass.png");
        POTION_M_LIQUID = loadImage("images/potion/potion_m_liquid.png");
        POTION_M_HYBRID = loadImage("images/potion/potion_m_hybrid.png");
        POTION_M_SPOTS = loadImage("images/potion/potion_m_spots.png");
        POTION_M_OUTLINE = loadImage("images/potion/potion_m_outline.png");
        POTION_SPHERE_CONTAINER = loadImage("images/potion/sphere/body.png");
        POTION_SPHERE_LIQUID = loadImage("images/potion/sphere/liquid.png");
        POTION_SPHERE_HYBRID = loadImage("images/potion/sphere/hybrid.png");
        POTION_SPHERE_SPOTS = loadImage("images/potion/sphere/spots.png");
        POTION_SPHERE_OUTLINE = loadImage("images/potion/sphere/outline.png");
        POTION_H_CONTAINER = loadImage("images/potion/potion_h_glass.png");
        POTION_H_LIQUID = loadImage("images/potion/potion_h_liquid.png");
        POTION_H_HYBRID = loadImage("images/potion/potion_h_hybrid.png");
        POTION_H_SPOTS = loadImage("images/potion/potion_h_spots.png");
        POTION_H_OUTLINE = loadImage("images/potion/potion_h_outline.png");
        POTION_BOTTLE_CONTAINER = loadImage("images/potion/bottle/body.png");
        POTION_BOTTLE_LIQUID = loadImage("images/potion/bottle/liquid.png");
        POTION_BOTTLE_HYBRID = loadImage("images/potion/bottle/hybrid.png");
        POTION_BOTTLE_SPOTS = loadImage("images/potion/bottle/spots.png");
        POTION_BOTTLE_OUTLINE = loadImage("images/potion/bottle/outline.png");
        POTION_HEART_CONTAINER = loadImage("images/potion/heart/body.png");
        POTION_HEART_LIQUID = loadImage("images/potion/heart/liquid.png");
        POTION_HEART_HYBRID = loadImage("images/potion/heart/hybrid.png");
        POTION_HEART_SPOTS = loadImage("images/potion/heart/spots.png");
        POTION_HEART_OUTLINE = loadImage("images/potion/heart/outline.png");
        POTION_SNECKO_CONTAINER = loadImage("images/potion/snecko/body.png");
        POTION_SNECKO_LIQUID = loadImage("images/potion/snecko/liquid.png");
        POTION_SNECKO_HYBRID = loadImage("images/potion/snecko/hybrid.png");
        POTION_SNECKO_SPOTS = loadImage("images/potion/snecko/spots.png");
        POTION_SNECKO_OUTLINE = loadImage("images/potion/snecko/outline.png");
        POTION_FAIRY_CONTAINER = loadImage("images/potion/fairy/body.png");
        POTION_FAIRY_LIQUID = loadImage("images/potion/fairy/liquid.png");
        POTION_FAIRY_HYBRID = loadImage("images/potion/fairy/hybrid.png");
        POTION_FAIRY_SPOTS = loadImage("images/potion/fairy/spots.png");
        POTION_FAIRY_OUTLINE = loadImage("images/potion/fairy/outline.png");
        POTION_GHOST_CONTAINER = loadImage("images/potion/ghost/body.png");
        POTION_GHOST_LIQUID = loadImage("images/potion/ghost/liquid.png");
        POTION_GHOST_HYBRID = loadImage("images/potion/ghost/hybrid.png");
        POTION_GHOST_SPOTS = loadImage("images/potion/ghost/spots.png");
        POTION_GHOST_OUTLINE = loadImage("images/potion/ghost/outline.png");
        POTION_JAR_CONTAINER = loadImage("images/potion/jar/body.png");
        POTION_JAR_LIQUID = loadImage("images/potion/jar/liquid.png");
        POTION_JAR_HYBRID = loadImage("images/potion/jar/hybrid.png");
        POTION_JAR_SPOTS = loadImage("images/potion/jar/spots.png");
        POTION_JAR_OUTLINE = loadImage("images/potion/jar/outline.png");
        POTION_BOLT_CONTAINER = loadImage("images/potion/bolt/body.png");
        POTION_BOLT_LIQUID = loadImage("images/potion/bolt/liquid.png");
        POTION_BOLT_HYBRID = loadImage("images/potion/bolt/hybrid.png");
        POTION_BOLT_SPOTS = loadImage("images/potion/bolt/spots.png");
        POTION_BOLT_OUTLINE = loadImage("images/potion/bolt/outline.png");
        POTION_CARD_CONTAINER = loadImage("images/potion/card/body.png");
        POTION_CARD_LIQUID = loadImage("images/potion/card/liquid.png");
        POTION_CARD_HYBRID = loadImage("images/potion/card/hybrid.png");
        POTION_CARD_SPOTS = loadImage("images/potion/card/spots.png");
        POTION_CARD_OUTLINE = loadImage("images/potion/card/outline.png");
        POTION_MOON_CONTAINER = loadImage("images/potion/moon/body.png");
        POTION_MOON_LIQUID = loadImage("images/potion/moon/liquid.png");
        POTION_MOON_HYBRID = loadImage("images/potion/moon/hybrid.png");
        POTION_MOON_OUTLINE = loadImage("images/potion/moon/outline.png");
        POTION_SPIKY_CONTAINER = loadImage("images/potion/spiky/body.png");
        POTION_SPIKY_LIQUID = loadImage("images/potion/spiky/liquid.png");
        POTION_SPIKY_HYBRID = loadImage("images/potion/spiky/hybrid.png");
        POTION_SPIKY_OUTLINE = loadImage("images/potion/spiky/outline.png");
        POTION_EYE_CONTAINER = loadImage("images/potion/eye/body.png");
        POTION_EYE_LIQUID = loadImage("images/potion/eye/liquid.png");
        POTION_EYE_HYBRID = loadImage("images/potion/eye/hybrid.png");
        POTION_EYE_OUTLINE = loadImage("images/potion/eye/outline.png");
        POTION_ANVIL_CONTAINER = loadImage("images/potion/anvil/body.png");
        POTION_ANVIL_LIQUID = loadImage("images/potion/anvil/liquid.png");
        POTION_ANVIL_HYBRID = loadImage("images/potion/anvil/hybrid.png");
        POTION_ANVIL_OUTLINE = loadImage("images/potion/anvil/outline.png");
        POTION_PLACEHOLDER = loadImage("images/potion/potion_placeholder.png");
        CHECKBOX = loadImage("images/ui/checkbox.png");
        TICK = loadImage("images/ui/tick.png");
        ORB_DARK = loadImage("images/orbs/dark.png");
        ORB_LIGHTNING = loadImage("images/orbs/lightning.png");
        ORB_PLASMA = loadImage("images/orbs/plasma.png");
        COLOR_TAB_RED = loadImage("images/ui/cardlibrary/redTab.png");
        COLOR_TAB_GREEN = loadImage("images/ui/cardlibrary/greenTab.png");
        COLOR_TAB_BLUE = loadImage("images/ui/cardlibrary/blueTab.png");
        COLOR_TAB_PURPLE = loadImage("images/ui/cardlibrary/purpleTab.png");
        COLOR_TAB_COLORLESS = loadImage("images/ui/cardlibrary/colorlessTab.png");
        COLOR_TAB_CURSE = loadImage("images/ui/cardlibrary/curseTab.png");
        COLOR_TAB_BAR = loadImage("images/ui/cardlibrary/colorTabBar.png");
        COLOR_TAB_LOCK = loadImage("images/ui/cardlibrary/colorTabLock.png");
        COLOR_TAB_BOX_UNTICKED = loadImage("images/ui/cardlibrary/tickbox_unticked.png");
        COLOR_TAB_BOX_TICKED = loadImage("images/ui/cardlibrary/tickbox_ticked.png");
        FILTER_IRONCLAD = loadImage("images/ui/leaderboards/ironclad.png");
        FILTER_SILENT = loadImage("images/ui/leaderboards/silent.png");
        FILTER_DEFECT = loadImage("images/ui/leaderboards/defect.png");
        FILTER_WATCHER = loadImage("images/ui/leaderboards/watcher.png");
        FILTER_FRIENDS = loadImage("images/ui/leaderboards/friends.png");
        FILTER_GLOBAL = loadImage("images/ui/leaderboards/global.png");
        FILTER_SCORE = loadImage("images/ui/leaderboards/score.png");
        FILTER_CHAIN = loadImage("images/ui/leaderboards/chain.png");
        FILTER_TIME = loadImage("images/ui/leaderboards/time.png");
        P_STANDARD = loadImage("images/ui/mainMenu/portrait/standard.jpg");
        P_DAILY = loadImage("images/ui/mainMenu/portrait/daily.jpg");
        P_LOOP = loadImage("images/ui/mainMenu/portrait/loop.jpg");
        P_INFO_CARD = loadImage("images/ui/mainMenu/portrait/card.jpg");
        P_INFO_RELIC = loadImage("images/ui/mainMenu/portrait/relics.jpg");
        P_INFO_POTION = loadImage("images/ui/mainMenu/portrait/potion.jpg");
        P_STAT_CHAR = loadImage("images/ui/mainMenu/portrait/charstat.jpg");
        P_STAT_LEADERBOARD = loadImage("images/ui/mainMenu/portrait/leaderboards.jpg");
        P_STAT_HISTORY = loadImage("images/ui/mainMenu/portrait/history.jpg");
        P_SETTING_GAME = loadImage("images/ui/mainMenu/portrait/gamesettings.jpg");
        P_SETTING_INPUT = loadImage("images/ui/mainMenu/portrait/input_settings.jpg");
        P_SETTING_CREDITS = loadImage("images/ui/mainMenu/portrait/credits.jpg");
        P_LOCK = loadImage("images/ui/mainMenu/portrait/lock.png");
        MENU_PANEL_BG_BLUE = loadImage("images/ui/mainMenu/menuPanel.png");
        MENU_PANEL_BG_GRAY = loadImage("images/ui/mainMenu/menuPanel4.png");
        MENU_PANEL_BG_RED = loadImage("images/ui/mainMenu/menuPanel3.png");
        MENU_PANEL_BG_BEIGE = loadImage("images/ui/mainMenu/menuPanel2.png");
        MENU_PANEL_FRAME = loadImage("images/ui/mainMenu/menuPanelFrame.png");
        FILTER_GLOW_BG = loadImage("images/ui/leaderboards/glow.png");
        CHAR_OPT_HIGHLIGHT = loadImage("images/ui/charSelect/highlightButton2.png");
        POPUP_ARROW = loadImage("images/ui/popupArrow.png");
        RELIC_POPUP = loadImage("images/ui/relicPopup.png");
        RELIC_LINKED = loadImage("images/ui/reward/relic_link.png");
        RELIC_LOCK = loadImage("images/relics/lock.png");
        RELIC_LOCK_OUTLINE = loadImage("images/relics/outline/lock.png");
        FILTER_ARROW = loadImage("images/ui/filterArrow.png");
        SCROLL_GRADIENT = loadImage("images/ui/scrollGradient.png");
        WHITE_GRADIENT = loadImage("images/ui/white_gradient.png");
        MAP_ICON = loadImage("images/ui/topPanel/map.png");
        DECK_ICON = loadImage("images/ui/topPanel/deck.png");
        SETTINGS_ICON = loadImage("images/ui/topPanel/settings.png");
        ENDLESS_ICON = loadImage("images/ui/topPanel/endless.png");
        KEY_SLOTS_ICON = loadImage("images/ui/topPanel/key_slots.png");
        RUBY_KEY = loadImage("images/ui/topPanel/key_red.png");
        EMERALD_KEY = loadImage("images/ui/topPanel/key_green.png");
        SAPPHIRE_KEY = loadImage("images/ui/topPanel/key_blue.png");
        RETICLE_CORNER = loadImage("images/ui/combat/reticleCorner.png");
        TARGET_UI_ARROW = loadImage("images/ui/combat/reticleArrow.png");
        TARGET_UI_CIRCLE = loadImage("images/ui/combat/reticleBlock.png");
        LARGE_CLOUD = loadImage("images/ui/dialog/largeCircle2.png");
        SMALL_CLOUD = loadImage("images/ui/dialog/smallCircle.png");
        GHOST_ORB_1 = loadImage("images/monsters/theBottom/boss/fire1.png");
        GHOST_ORB_2 = loadImage("images/monsters/theBottom/boss/fire2.png");
        CONTROLLER_HB_HIGHLIGHT = loadImage("images/ui/selectionBox.png");
        DEBUG_HITBOX_IMG = new Texture("images/debugHitbox.png");
        DEBUG_HITBOX_IMG.setFilter(com.badlogic.gdx.graphics.Texture.TextureFilter.Nearest, com.badlogic.gdx.graphics.Texture.TextureFilter.Nearest);
        WARNING_ICON_VFX = loadImage("images/vfx/ui/warning.png");
        SPOTLIGHT_VFX = loadImage("images/vfx/spotlight.jpg");
        WOBBLY_ORB_VFX = loadImage("images/vfx/orb.png");
        ANIMATED_SLASH_VFX = loadImage("images/vfx/combat/slash_1.png");
        DEBUFF_VFX_1 = loadImage("images/ui/intent/debuffVFX1.png");
        DEBUFF_VFX_2 = loadImage("images/ui/intent/debuffVFX2.png");
        DEBUFF_VFX_3 = loadImage("images/ui/intent/debuffVFX3.png");
        FLAME_ANIM_1 = loadImage("images/vfx/map/flame_1_0.png");
        FLAME_ANIM_2 = loadImage("images/vfx/map/flame_1_1.png");
        FLAME_ANIM_3 = loadImage("images/vfx/map/flame_1_2.png");
        FLAME_ANIM_4 = loadImage("images/vfx/map/flame_1_3.png");
        FLAME_ANIM_5 = loadImage("images/vfx/map/flame_1_4.png");
        FLAME_ANIM_6 = loadImage("images/vfx/map/flame_1_5.png");
        WEB_VFX = loadImage("images/vfx/web.png");
        HORIZONTAL_LINE = loadImage("images/vfx/horizontal_line.png");
        PETAL_VFX[0] = loadImage("images/vfx/petal/petal1.png");
        PETAL_VFX[1] = loadImage("images/vfx/petal/petal2.png");
        PETAL_VFX[2] = loadImage("images/vfx/petal/petal3.png");
        PETAL_VFX[3] = loadImage("images/vfx/petal/petal4.png");
        WATER_DROP_VFX[0] = loadImage("images/vfx/water_drop/drop1.png");
        WATER_DROP_VFX[1] = loadImage("images/vfx/water_drop/drop2.png");
        WATER_DROP_VFX[2] = loadImage("images/vfx/water_drop/drop3.png");
        WATER_DROP_VFX[3] = loadImage("images/vfx/water_drop/drop4.png");
        WATER_DROP_VFX[4] = loadImage("images/vfx/water_drop/drop5.png");
        WATER_DROP_VFX[5] = loadImage("images/vfx/water_drop/drop6.png");
        ORB_SLOT_1 = loadImage("images/orbs/empty1.png");
        ORB_SLOT_2 = loadImage("images/orbs/empty2.png");
        FROST_ORB_RIGHT = loadImage("images/orbs/frostRight.png");
        FROST_ORB_LEFT = loadImage("images/orbs/frostLeft.png");
        FROST_ORB_MIDDLE = loadImage("images/orbs/frostMid.png");
        FROST_ACTIVATE_VFX_1 = loadImage("images/orbs/f1.png");
        FROST_ACTIVATE_VFX_2 = loadImage("images/orbs/f2.png");
        FROST_ACTIVATE_VFX_3 = loadImage("images/orbs/f3.png");
        LIGHTNING_PASSIVE_VFX.add(loadImage("images/vfx/defect/lightning_passive_1.png"));
        LIGHTNING_PASSIVE_VFX.add(loadImage("images/vfx/defect/lightning_passive_2.png"));
        LIGHTNING_PASSIVE_VFX.add(loadImage("images/vfx/defect/lightning_passive_3.png"));
        LIGHTNING_PASSIVE_VFX.add(loadImage("images/vfx/defect/lightning_passive_4.png"));
        LIGHTNING_PASSIVE_VFX.add(loadImage("images/vfx/defect/lightning_passive_5.png"));
        DARK_ORB_PASSIVE_VFX_1 = loadImage("images/orbs/d1.png");
        DARK_ORB_PASSIVE_VFX_2 = loadImage("images/orbs/d2.png");
        DARK_ORB_PASSIVE_VFX_3 = loadImage("images/orbs/d3.png");
        DARK_ORB_ACTIVATE_VFX = loadImage("images/orbs/darkEvoke2.png");
        SPEECH_BUBBLE_IMG = loadImage("images/ui/dialog/speechBubble2.png");
        SHOP_SPEECH_BUBBLE_IMG = loadImage("images/ui/dialog/speechBubble3.png");
        KEYWORD_TOP = loadImage("images/ui/tip/tipTop.png");
        KEYWORD_BODY = loadImage("images/ui/tip/tipMid.png");
        KEYWORD_BOT = loadImage("images/ui/tip/tipBot.png");
        FTUE = loadImage("images/ui/tip/ftue.png");
        FTUE_BTN = loadImage("images/ui/tip/ftueButton.png");
        DYNAMIC_BTN_IMG2 = loadImage("images/ui/topPanel/buttonL.png");
        DYNAMIC_BTN_IMG3 = loadImage("images/ui/topPanel/buttonLRed.png");
        WHITE_SQUARE_IMG = new Texture("images/whiteSquare32.png");
        WHITE_SQUARE_IMG.setFilter(com.badlogic.gdx.graphics.Texture.TextureFilter.Nearest, com.badlogic.gdx.graphics.Texture.TextureFilter.Nearest);
        DECK_COUNT_CIRCLE = loadImage("images/ui/topPanel/countCircle.png");
        TOP_PANEL_BAR = loadImage("images/ui/topPanel/bar.png");
        TIMER_ICON = loadImage("images/ui/timerIcon.png");
        VICTORY_BANNER = loadImage("images/ui/selectBanner.png");
        REWARD_SCREEN_SHEET = loadImage("images/ui/reward/rewardScreenSheet.png");
        REWARD_SCREEN_TAKE_BUTTON = loadImage("images/ui/reward/takeAll.png");
        REWARD_SCREEN_TAKE_USED_BUTTON = loadImage("images/ui/reward/takeAllUsed.png");
        REWARD_SCREEN_ITEM = loadImage("images/ui/reward/rewardListItemPanel.png");
        REWARD_CARD_NORMAL = loadImage("images/ui/reward/normalCardReward.png");
        REWARD_CARD_BOSS = loadImage("images/ui/reward/bossCardReward.png");
        UI_GOLD = loadImage("images/ui/topPanel/gold.png");
        TP_HP = loadImage("images/ui/topPanel/panelHeart.png");
        TP_GOLD = loadImage("images/ui/topPanel/panelGoldBag.png");
        TP_FLOOR = loadImage("images/ui/topPanel/floor.png");
        TP_ASCENSION = loadImage("images/ui/topPanel/ascension.png");
        HEALTH_BAR_B = loadImage("images/ui/combat/body7.png");
        HEALTH_BAR_L = loadImage("images/ui/combat/left7.png");
        HEALTH_BAR_R = loadImage("images/ui/combat/right7.png");
        HB_SHADOW_L = loadImage("images/ui/combat/leftBg.png");
        HB_SHADOW_R = loadImage("images/ui/combat/rightBg.png");
        HB_SHADOW_B = loadImage("images/ui/combat/bodyBg.png");
        BLOCK_ICON = loadImage("images/ui/combat/block.png");
        BLOCK_ICON_L = loadImage("images/ui/combat/blockL.png");
        BLOCK_ICON_R = loadImage("images/ui/combat/blockR.png");
        BLOCK_BAR_B = loadImage("images/ui/combat/blockBody3.png");
        BLOCK_BAR_R = loadImage("images/ui/combat/blockRight3.png");
        BLOCK_BAR_L = loadImage("images/ui/combat/blockLeft3.png");
        DRAW_PILE_BANNER = loadImage("images/ui/combat/combatDeckBanner.png");
        DISCARD_PILE_BANNER = loadImage("images/ui/combat/discardPileBanner.png");
        SETTINGS_BACKGROUND = loadImage("images/ui/option/settingsBackground.png");
        OPTION_ABANDON = loadImage("images/ui/option/abandon.png");
        OPTION_TOGGLE = loadImage("images/ui/option/toggleButtonBase.png");
        OPTION_TOGGLE_ON = loadImage("images/ui/option/toggleButtonOverlay2.png");
        OPTION_SLIDER_BG = loadImage("images/ui/option/sliderBg.png");
        OPTION_SLIDER = loadImage("images/ui/option/slider.png");
        OPTION_EXIT = loadImage("images/ui/option/quitButton.png");
        OPTION_CONFIRM = loadImage("images/ui/option/confirm.png");
        RENAME_BOX = loadImage("images/ui/option/nameBox.png");
        OPTION_YES = loadImage("images/ui/option/yes.png");
        OPTION_NO = loadImage("images/ui/option/no.png");
        SCROLL_BAR_TOP = loadImage("images/ui/mainMenu/scrollBar/scrollBarTrackTop.png");
        SCROLL_BAR_MIDDLE = loadImage("images/ui/mainMenu/scrollBar/scrollBarTrackMid.png");
        SCROLL_BAR_BOTTOM = loadImage("images/ui/mainMenu/scrollBar/scrollBarTrackBottom.png");
        SCROLL_BAR_TRAIN = loadImage("images/ui/mainMenu/scrollBar/scrollBarTrain.png");
        SCROLL_BAR_LEFT = loadImage("images/ui/mainMenu/scrollBar/scrollBarTrackLeft.png");
        SCROLL_BAR_HORIZONTAL_MIDDLE = loadImage("images/ui/mainMenu/scrollBar/scrollBarTrackHorizontalMid.png");
        SCROLL_BAR_RIGHT = loadImage("images/ui/mainMenu/scrollBar/scrollBarTrackRight.png");
        SCROLL_BAR_HORIZONTAL_TRAIN = loadImage("images/ui/mainMenu/scrollBar/scrollBarHorizontalTrain.png");
        INPUT_SETTINGS_BG = loadImage("images/ui/option/inputPaneBg2.png");
        INPUT_SETTINGS_EDGES = loadImage("images/ui/option/inputPaneFg.png");
        INPUT_SETTINGS_ROW = loadImage("images/ui/option/inputCell2.png");
        DECK_BTN_BASE = loadImage("images/ui/deckButton/base.png");
        DISCARD_BTN_BASE = loadImage("images/ui/discardButton/base.png");
        PEEK_BUTTON = loadImage("images/ui/topPanel/peek_button.png");
        CAMPFIRE_REST_BUTTON = loadImage("images/ui/campfire/sleep.png");
        CAMPFIRE_SMITH_BUTTON = loadImage("images/ui/campfire/smith.png");
        CAMPFIRE_TOKE_BUTTON = loadImage("images/ui/campfire/toke.png");
        CAMPFIRE_TRAIN_BUTTON = loadImage("images/ui/campfire/train.png");
        CAMPFIRE_DIG_BUTTON = loadImage("images/ui/campfire/dig.png");
        CAMPFIRE_RECALL_BUTTON = loadImage("images/ui/campfire/recall.png");
        CAMPFIRE_HOVER_BUTTON = loadImage("images/ui/campfire/outline.png");
        UPGRADE_ARROW = loadImage("images/ui/campfire/upgradeArrow.png");
        CF_LEFT_ARROW = loadImage("images/ui/charSelect/tinyLeftArrow.png");
        CF_RIGHT_ARROW = loadImage("images/ui/charSelect/tinyRightArrow.png");
        INTENT_ATK_1 = loadImage("images/ui/intent/attack/attack_intent_1.png");
        INTENT_ATK_2 = loadImage("images/ui/intent/attack/attack_intent_2.png");
        INTENT_ATK_3 = loadImage("images/ui/intent/attack/attack_intent_3.png");
        INTENT_ATK_4 = loadImage("images/ui/intent/attack/attack_intent_4.png");
        INTENT_ATK_5 = loadImage("images/ui/intent/attack/attack_intent_5.png");
        INTENT_ATK_6 = loadImage("images/ui/intent/attack/attack_intent_6.png");
        INTENT_ATK_7 = loadImage("images/ui/intent/attack/attack_intent_7.png");
        INTENT_ATK_TIP_1 = loadImage("images/ui/intent/tip/1.png");
        INTENT_ATK_TIP_2 = loadImage("images/ui/intent/tip/2.png");
        INTENT_ATK_TIP_3 = loadImage("images/ui/intent/tip/3.png");
        INTENT_ATK_TIP_4 = loadImage("images/ui/intent/tip/4.png");
        INTENT_ATK_TIP_5 = loadImage("images/ui/intent/tip/5.png");
        INTENT_ATK_TIP_6 = loadImage("images/ui/intent/tip/6.png");
        INTENT_ATK_TIP_7 = loadImage("images/ui/intent/tip/7.png");
        INTENT_BUFF = loadImage("images/ui/intent/buff1.png");
        INTENT_BUFF_L = loadImage("images/ui/intent/buff1L.png");
        INTENT_DEBUFF = loadImage("images/ui/intent/debuff1.png");
        INTENT_DEBUFF_L = loadImage("images/ui/intent/debuff1L.png");
        INTENT_DEBUFF2 = loadImage("images/ui/intent/debuff2.png");
        INTENT_DEBUFF2_L = loadImage("images/ui/intent/debuff2L.png");
        INTENT_DEFEND = loadImage("images/ui/intent/defend.png");
        INTENT_DEFEND_L = loadImage("images/ui/intent/defendL.png");
        INTENT_DEFEND_BUFF = loadImage("images/ui/intent/defendBuff.png");
        INTENT_DEFEND_BUFF_L = loadImage("images/ui/intent/defendBuffL.png");
        INTENT_ESCAPE = loadImage("images/ui/intent/escape.png");
        INTENT_ESCAPE_L = loadImage("images/ui/intent/escapeL.png");
        INTENT_MAGIC = loadImage("images/ui/intent/magic.png");
        INTENT_MAGIC_L = loadImage("images/ui/intent/magicL.png");
        INTENT_SLEEP = loadImage("images/ui/intent/sleep.png");
        INTENT_SLEEP_L = loadImage("images/ui/intent/sleepL.png");
        INTENT_STUN = loadImage("images/ui/intent/stun.png");
        INTENT_UNKNOWN = loadImage("images/ui/intent/unknown.png");
        INTENT_UNKNOWN_L = loadImage("images/ui/intent/unknownL.png");
        INTENT_ATTACK_BUFF = loadImage("images/ui/intent/attackBuff.png");
        INTENT_ATTACK_DEBUFF = loadImage("images/ui/intent/attackDebuff.png");
        INTENT_ATTACK_DEFEND = loadImage("images/ui/intent/attackDefend.png");
        ENERGY_RED_LAYER6 = loadImage("images/ui/topPanel/red/layer6.png");
        ENERGY_RED_LAYER5 = loadImage("images/ui/topPanel/red/layer5.png");
        ENERGY_RED_LAYER4 = loadImage("images/ui/topPanel/red/layer4.png");
        ENERGY_RED_LAYER3 = loadImage("images/ui/topPanel/red/layer3.png");
        ENERGY_RED_LAYER2 = loadImage("images/ui/topPanel/red/layer2.png");
        ENERGY_RED_LAYER1 = loadImage("images/ui/topPanel/red/layer1.png");
        ENERGY_RED_LAYER5D = loadImage("images/ui/topPanel/red/layer5d.png");
        ENERGY_RED_LAYER4D = loadImage("images/ui/topPanel/red/layer4d.png");
        ENERGY_RED_LAYER3D = loadImage("images/ui/topPanel/red/layer3d.png");
        ENERGY_RED_LAYER2D = loadImage("images/ui/topPanel/red/layer2d.png");
        ENERGY_RED_LAYER1D = loadImage("images/ui/topPanel/red/layer1d.png");
        ENERGY_GREEN_LAYER6 = loadImage("images/ui/topPanel/green/layer6.png");
        ENERGY_GREEN_LAYER5 = loadImage("images/ui/topPanel/green/layer5.png");
        ENERGY_GREEN_LAYER4 = loadImage("images/ui/topPanel/green/layer4.png");
        ENERGY_GREEN_LAYER3 = loadImage("images/ui/topPanel/green/layer3.png");
        ENERGY_GREEN_LAYER2 = loadImage("images/ui/topPanel/green/layer2.png");
        ENERGY_GREEN_LAYER1 = loadImage("images/ui/topPanel/green/layer1.png");
        ENERGY_GREEN_LAYER5D = loadImage("images/ui/topPanel/green/layer5d.png");
        ENERGY_GREEN_LAYER4D = loadImage("images/ui/topPanel/green/layer4d.png");
        ENERGY_GREEN_LAYER3D = loadImage("images/ui/topPanel/green/layer3d.png");
        ENERGY_GREEN_LAYER2D = loadImage("images/ui/topPanel/green/layer2d.png");
        ENERGY_GREEN_LAYER1D = loadImage("images/ui/topPanel/green/layer1d.png");
        ENERGY_BLUE_LAYER6 = loadImage("images/ui/topPanel/blue/border.png");
        ENERGY_BLUE_LAYER5 = loadImage("images/ui/topPanel/blue/5.png");
        ENERGY_BLUE_LAYER4 = loadImage("images/ui/topPanel/blue/4.png");
        ENERGY_BLUE_LAYER3 = loadImage("images/ui/topPanel/blue/3.png");
        ENERGY_BLUE_LAYER2 = loadImage("images/ui/topPanel/blue/2.png");
        ENERGY_BLUE_LAYER1 = loadImage("images/ui/topPanel/blue/1.png");
        ENERGY_BLUE_LAYER5D = loadImage("images/ui/topPanel/blue/5d.png");
        ENERGY_BLUE_LAYER4D = loadImage("images/ui/topPanel/blue/4d.png");
        ENERGY_BLUE_LAYER3D = loadImage("images/ui/topPanel/blue/3d.png");
        ENERGY_BLUE_LAYER2D = loadImage("images/ui/topPanel/blue/2d.png");
        ENERGY_BLUE_LAYER1D = loadImage("images/ui/topPanel/blue/1d.png");
        ENERGY_PURPLE_BORDER = loadImage("images/ui/topPanel/purple/border.png");
        ENERGY_PURPLE_LAYER1 = loadImage("images/ui/topPanel/purple/l1.png");
        ENERGY_PURPLE_LAYER2 = loadImage("images/ui/topPanel/purple/l2.png");
        ENERGY_PURPLE_LAYER3 = loadImage("images/ui/topPanel/purple/l3.png");
        ENERGY_PURPLE_LAYER4 = loadImage("images/ui/topPanel/purple/l4.png");
        RED_ORB_FLASH_VFX = loadImage("images/ui/topPanel/energyRedVFX.png");
        GREEN_ORB_FLASH_VFX = loadImage("images/ui/topPanel/energyGreenVFX.png");
        BLUE_ORB_FLASH_VFX = loadImage("images/ui/topPanel/energyBlueVFX.png");
        PURPLE_ORB_FLASH_VFX = loadImage("images/ui/topPanel/energyPurpleVFX.png");
        MAP_NODE_ELITE = loadImage("images/ui/map/elite.png");
        MAP_NODE_ELITE_OUTLINE = loadImage("images/ui/map/eliteOutline.png");
        MAP_NODE_ENEMY = loadImage("images/ui/map/monster.png");
        MAP_NODE_ENEMY_OUTLINE = loadImage("images/ui/map/monsterOutline.png");
        MAP_NODE_REST = loadImage("images/ui/map/rest.png");
        MAP_NODE_REST_OUTLINE = loadImage("images/ui/map/restOutline.png");
        MAP_NODE_MERCHANT = loadImage("images/ui/map/shop.png");
        MAP_NODE_MERCHANT_OUTLINE = loadImage("images/ui/map/shopOutline.png");
        MAP_LEGEND = loadImage("images/ui/map/legend2.png");
        MAP_NODE_TREASURE = loadImage("images/ui/map/chest.png");
        MAP_NODE_TREASURE_OUTLINE = loadImage("images/ui/map/chestOutline.png");
        MAP_CIRCLE_1 = loadImage("images/ui/map/circle1.png");
        MAP_CIRCLE_2 = loadImage("images/ui/map/circle2.png");
        MAP_CIRCLE_3 = loadImage("images/ui/map/circle3.png");
        MAP_CIRCLE_4 = loadImage("images/ui/map/circle4.png");
        MAP_CIRCLE_5 = loadImage("images/ui/map/circle5.png");
        MAP_NODE_EVENT = loadImage("images/ui/map/event.png");
        MAP_NODE_EVENT_OUTLINE = loadImage("images/ui/map/eventOutline.png");
        MAP_DOT_1 = loadImage("images/ui/map/dot1.png");
        CANCEL_BUTTON = loadImage("images/ui/topPanel/cancelButton.png");
        CANCEL_BUTTON_SHADOW = loadImage("images/ui/topPanel/cancelButtonShadow.png");
        CANCEL_BUTTON_OUTLINE = loadImage("images/ui/topPanel/cancelButtonOutline.png");
        CONFIRM_BUTTON = loadImage("images/ui/topPanel/confirmButton.png");
        CONFIRM_BUTTON_SHADOW = loadImage("images/ui/topPanel/confirmButtonShadow.png");
        CONFIRM_BUTTON_OUTLINE = loadImage("images/ui/topPanel/confirmButtonOutline.png");
        PROCEED_BUTTON = loadImage("images/ui/topPanel/proceedButton.png");
        PROCEED_BUTTON_SHADOW = loadImage("images/ui/topPanel/proceedButtonShadow.png");
        PROCEED_BUTTON_OUTLINE = loadImage("images/ui/topPanel/proceedButtonOutline.png");
        UNLOCK_TEXT_BG = loadImage("images/ui/unlockBlur.png");
        EVENT_IMG_FRAME = loadImage("images/ui/event/imgFrame.png");
        EVENT_BUTTON_ENABLED = loadImage("images/ui/event/enabledButton.png");
        EVENT_BUTTON_DISABLED = loadImage("images/ui/event/disabledButton.png");
        EVENT_ROOM_PANEL = loadImage("images/ui/event/roomTextPanel.png");
        END_TURN_BUTTON = loadImage("images/ui/topPanel/endTurnButton.png");
        END_TURN_BUTTON_GLOW = loadImage("images/ui/topPanel/endTurnButtonGlow.png");
        END_TURN_HOVER = loadImage("images/ui/topPanel/endTurnHover.png");
        TINY_CARD_ATTACK = loadImage("images/tinyCards/attackPortrait.png", false);
        TINY_CARD_SKILL = loadImage("images/tinyCards/skillPortrait.png", false);
        TINY_CARD_POWER = loadImage("images/tinyCards/powerPortrait.png", false);
        TINY_CARD_PORTRAIT_SHADOW = loadImage("images/tinyCards/portraitShadow.png", false);
        TINY_CARD_BACKGROUND = loadImage("images/tinyCards/cardBack.png", false);
        TINY_CARD_BANNER = loadImage("images/tinyCards/banner.png", false);
        TINY_CARD_BANNER_SHADOW = loadImage("images/tinyCards/bannerShadow.png", false);
        TINY_CARD_DESCRIPTION = loadImage("images/tinyCards/descBox.png", false);
        RUN_HISTORY_MAP_ICON_BOSS = loadImage("images/ui/runHistory/mapIcons/boss.png", false);
        RUN_HISTORY_MAP_ICON_BOSS_CHEST = loadImage("images/ui/runHistory/mapIcons/bosschest.png", false);
        RUN_HISTORY_MAP_ICON_CHEST = loadImage("images/ui/runHistory/mapIcons/chest.png", false);
        RUN_HISTORY_MAP_ICON_ELITE = loadImage("images/ui/runHistory/mapIcons/elite.png", false);
        RUN_HISTORY_MAP_ICON_EVENT = loadImage("images/ui/runHistory/mapIcons/unknown.png", false);
        RUN_HISTORY_MAP_ICON_MONSTER = loadImage("images/ui/runHistory/mapIcons/monster.png", false);
        RUN_HISTORY_MAP_ICON_REST = loadImage("images/ui/runHistory/mapIcons/rest.png", false);
        RUN_HISTORY_MAP_ICON_SHOP = loadImage("images/ui/runHistory/mapIcons/shop.png", false);
        RUN_HISTORY_MAP_ICON_UNKNOWN_CHEST = loadImage("images/ui/runHistory/mapIcons/unknownChest.png", false);
        RUN_HISTORY_MAP_ICON_UNKNOWN_MONSTER = loadImage("images/ui/runHistory/mapIcons/unknownMonster.png", false);
        RUN_HISTORY_MAP_ICON_UNKNOWN_SHOP = loadImage("images/ui/runHistory/mapIcons/unknownShop.png", false);
        BOSS_CHEST = loadImage("images/npcs/bossChest.png");
        BOSS_CHEST_OPEN = loadImage("images/npcs/bossChestOpened.png");
        BOSS_CHEST_SMOKE = loadImage("images/ui/bossRelicScreenOverlay.png");
        L_CHEST = loadImage("images/npcs/largeChest.png");
        L_CHEST_OPEN = loadImage("images/npcs/largeChestOpened.png");
        M_CHEST = loadImage("images/npcs/mediumChest.png");
        M_CHEST_OPEN = loadImage("images/npcs/mediumChestOpened.png");
        S_CHEST = loadImage("images/npcs/smallChest.png");
        S_CHEST_OPEN = loadImage("images/npcs/smallChestOpened.png");
        logger.info((new StringBuilder()).append("Texture load time: ").append(System.currentTimeMillis() - startTime).append("ms").toString());
    }

    public static void loadRelicImg(String id, String imgUrl)
    {
        if(!relicImages.containsKey(id))
        {
            relicImages.put(id, loadImage((new StringBuilder()).append("images/relics/").append(imgUrl).toString()));
            relicOutlineImages.put(id, loadImage((new StringBuilder()).append("images/relics/outline/").append(imgUrl).toString()));
        }
    }

    public static Texture getRelicImg(String id)
    {
        return (Texture)relicImages.get(id);
    }

    public static Texture getRelicOutlineImg(String id)
    {
        return (Texture)relicOutlineImages.get(id);
    }

    public static void loadControllerImages(com.megacrit.cardcrawl.helpers.controller.CInputHelper.ControllerModel model)
    {
        if(CONTROLLER_A != null)
        {
            CONTROLLER_A.dispose();
            CONTROLLER_B.dispose();
            CONTROLLER_X.dispose();
            CONTROLLER_Y.dispose();
            CONTROLLER_LB.dispose();
            CONTROLLER_RB.dispose();
            CONTROLLER_BACK.dispose();
            CONTROLLER_START.dispose();
            CONTROLLER_LS.dispose();
            CONTROLLER_LS_UP.dispose();
            CONTROLLER_LS_DOWN.dispose();
            CONTROLLER_LS_LEFT.dispose();
            CONTROLLER_LS_RIGHT.dispose();
            CONTROLLER_RS.dispose();
            CONTROLLER_RS_UP.dispose();
            CONTROLLER_RS_DOWN.dispose();
            CONTROLLER_RS_LEFT.dispose();
            CONTROLLER_RS_RIGHT.dispose();
            CONTROLLER_D_UP.dispose();
            CONTROLLER_D_DOWN.dispose();
            CONTROLLER_D_LEFT.dispose();
            CONTROLLER_D_RIGHT.dispose();
            CONTROLLER_LT.dispose();
            CONTROLLER_RT.dispose();
        }
        String dirName = "xbox360";
        static class _cls1
        {

            static final int $SwitchMap$com$megacrit$cardcrawl$helpers$controller$CInputHelper$ControllerModel[];

            static 
            {
                $SwitchMap$com$megacrit$cardcrawl$helpers$controller$CInputHelper$ControllerModel = new int[com.megacrit.cardcrawl.helpers.controller.CInputHelper.ControllerModel.values().length];
                try
                {
                    $SwitchMap$com$megacrit$cardcrawl$helpers$controller$CInputHelper$ControllerModel[com.megacrit.cardcrawl.helpers.controller.CInputHelper.ControllerModel.XBOX_360.ordinal()] = 1;
                }
                catch(NoSuchFieldError nosuchfielderror) { }
                try
                {
                    $SwitchMap$com$megacrit$cardcrawl$helpers$controller$CInputHelper$ControllerModel[com.megacrit.cardcrawl.helpers.controller.CInputHelper.ControllerModel.XBOX_ONE.ordinal()] = 2;
                }
                catch(NoSuchFieldError nosuchfielderror1) { }
            }
        }

        switch(_cls1..SwitchMap.com.megacrit.cardcrawl.helpers.controller.CInputHelper.ControllerModel[model.ordinal()])
        {
        case 2: // '\002'
            dirName = "xboxOne";
            break;
        }
        CONTROLLER_A = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/a.png").toString());
        CONTROLLER_B = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/b.png").toString());
        CONTROLLER_X = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/x.png").toString());
        CONTROLLER_Y = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/y.png").toString());
        CONTROLLER_LB = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/lb.png").toString());
        CONTROLLER_RB = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/rb.png").toString());
        CONTROLLER_BACK = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/back.png").toString());
        CONTROLLER_START = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/start.png").toString());
        CONTROLLER_LS = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/ls.png").toString());
        CONTROLLER_LS_UP = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/ls_up.png").toString());
        CONTROLLER_LS_DOWN = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/ls_down.png").toString());
        CONTROLLER_LS_LEFT = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/ls_left.png").toString());
        CONTROLLER_LS_RIGHT = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/ls_right.png").toString());
        CONTROLLER_RS = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/rs.png").toString());
        CONTROLLER_RS_UP = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/rs_up.png").toString());
        CONTROLLER_RS_DOWN = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/rs_down.png").toString());
        CONTROLLER_RS_LEFT = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/rs_left.png").toString());
        CONTROLLER_RS_RIGHT = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/rs_right.png").toString());
        CONTROLLER_D_UP = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/up.png").toString());
        CONTROLLER_D_DOWN = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/down.png").toString());
        CONTROLLER_D_LEFT = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/left.png").toString());
        CONTROLLER_D_RIGHT = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/right.png").toString());
        CONTROLLER_LT = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/lt.png").toString());
        CONTROLLER_RT = loadImage((new StringBuilder()).append("images/ui/controller/").append(dirName).append("/rt.png").toString());
    }

    public static Texture loadImage(String imgUrl)
    {
        if(!$assertionsDisabled && imgUrl == null)
            throw new AssertionError("DO NOT CALL LOAD IMAGE WITH NULL");
        try
        {
            Texture retVal = new Texture(imgUrl);
            retVal.setFilter(com.badlogic.gdx.graphics.Texture.TextureFilter.Linear, com.badlogic.gdx.graphics.Texture.TextureFilter.Linear);
            return retVal;
        }
        catch(Exception e)
        {
            logger.info((new StringBuilder()).append("[WARNING] No image at ").append(imgUrl).toString());
        }
        return null;
    }

    public static Texture loadImage(String imgUrl, boolean linearFiltering)
    {
        if(!$assertionsDisabled && imgUrl == null)
            throw new AssertionError("DO NOT CALL LOAD IMAGE WITH NULL");
        try
        {
            Texture retVal = new Texture(imgUrl);
            if(linearFiltering)
                retVal.setFilter(com.badlogic.gdx.graphics.Texture.TextureFilter.Linear, com.badlogic.gdx.graphics.Texture.TextureFilter.Linear);
            else
                retVal.setFilter(com.badlogic.gdx.graphics.Texture.TextureFilter.Nearest, com.badlogic.gdx.graphics.Texture.TextureFilter.Nearest);
            return retVal;
        }
        catch(Exception e)
        {
            logger.info((new StringBuilder()).append("[ERROR] ").append(e.getMessage()).toString());
        }
        return null;
    }

    private static final Logger logger = LogManager.getLogger(com/megacrit/cardcrawl/helpers/ImageMaster.getName());
    public static TextureAtlas vfxAtlas;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DECK_GLOW_1;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DECK_GLOW_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DECK_GLOW_3;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DECK_GLOW_4;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DECK_GLOW_5;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DECK_GLOW_6;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DUST_1;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DUST_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DUST_3;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DUST_4;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DUST_5;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DUST_6;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DEATH_VFX_1;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DEATH_VFX_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DEATH_VFX_3;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DEATH_VFX_4;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DEATH_VFX_5;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DEATH_VFX_6;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion SCENE_TRANSITION_FADER;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion SMOKE_1;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion SMOKE_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion SMOKE_3;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CONE_1;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CONE_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CONE_3;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CONE_4;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CONE_5;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion EXHAUST_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion EXHAUST_S;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion ATK_BLUNT_HEAVY;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion ATK_BLUNT_LIGHT;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion ATK_FIRE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion ATK_POISON;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion ATK_SHIELD;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion ATK_SLASH_HEAVY;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion ATK_SLASH_H;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion ATK_SLASH_V;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion ATK_SLASH_D;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion ATK_SLASH_RED;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion ROOM_SHINE_1;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion ROOM_SHINE_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion COPPER_COIN_1;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion COPPER_COIN_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion GRAB_COIN;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion FLAME_1;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion FLAME_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion FLAME_3;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion STRIKE_LINE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion STRIKE_LINE_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion STRIKE_BLUR;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion GLOW_SPARK;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion GLOW_SPARK_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion THICK_3D_LINE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion THICK_3D_LINE_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion MOVE_NAME_BG;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion VERTICAL_AURA;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion POWER_UP_1;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion POWER_UP_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion WOBBLY_LINE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion BLUR_WAVE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion DAGGER_STREAK;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion WHITE_RING;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion VERTICAL_IMPACT;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion BORDER_GLOW;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion BORDER_GLOW_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion UPGRADE_HAMMER_IMPACT;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion UPGRADE_HAMMER_LINE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CRYSTAL_IMPACT;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion TORCH_FIRE_1;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion TORCH_FIRE_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion TORCH_FIRE_3;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion TINY_STAR;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion EYE_ANIM_0;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion EYE_ANIM_1;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion EYE_ANIM_2;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion EYE_ANIM_3;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion EYE_ANIM_4;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion EYE_ANIM_5;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion EYE_ANIM_6;
    public static Texture PROFILE_A;
    public static Texture PROFILE_B;
    public static Texture PROFILE_C;
    public static Texture PROFILE_SLOT;
    public static Texture PROFILE_DELETE;
    public static Texture PROFILE_RENAME;
    public static Texture CHAR_SELECT_IRONCLAD;
    public static Texture CHAR_SELECT_SILENT;
    public static Texture CHAR_SELECT_DEFECT;
    public static Texture CHAR_SELECT_WATCHER;
    public static Texture CHAR_SELECT_LOCKED;
    public static Texture CHAR_SELECT_BG_IRONCLAD;
    public static Texture CHAR_SELECT_BG_SILENT;
    public static Texture CHAR_SELECT_BG_DEFECT;
    public static Texture CHAR_SELECT_BG_WATCHER;
    private static TextureAtlas cardUiAtlas;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_ATTACK_BG_PURPLE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_PURPLE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_POWER_BG_PURPLE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_PURPLE_ORB;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_ATTACK_BG_RED;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_ATTACK_BG_GREEN;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_ATTACK_BG_BLUE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_ATTACK_BG_GRAY;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_ATTACK_BG_SILHOUETTE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_RED;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_GREEN;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_BLUE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_BLACK;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_GRAY;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_SILHOUETTE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_POWER_BG_RED;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_POWER_BG_GREEN;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_POWER_BG_BLUE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_POWER_BG_GRAY;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_POWER_BG_SILHOUETTE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_ATTACK_COMMON;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_ATTACK_UNCOMMON;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_ATTACK_RARE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_SKILL_COMMON;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_SKILL_UNCOMMON;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_SKILL_RARE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_POWER_COMMON;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_POWER_UNCOMMON;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_POWER_RARE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_BANNER_COMMON;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_BANNER_UNCOMMON;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_BANNER_RARE;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SUPER_SHADOW;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_BACK;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_BG;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_RED_ORB;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_GREEN_ORB;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_BLUE_ORB;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_COLORLESS_ORB;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_COMMON_FRAME_LEFT;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_COMMON_FRAME_MID;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_COMMON_FRAME_RIGHT;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_UNCOMMON_FRAME_LEFT;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_UNCOMMON_FRAME_MID;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_UNCOMMON_FRAME_RIGHT;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_RARE_FRAME_LEFT;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_RARE_FRAME_MID;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_RARE_FRAME_RIGHT;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FLASH_VFX;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_ATTACK_BG_RED_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_ATTACK_BG_GREEN_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_ATTACK_BG_BLUE_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_ATTACK_BG_PURPLE_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_ATTACK_BG_GRAY_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_RED_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_GREEN_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_BLUE_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_PURPLE_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_GRAY_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_SKILL_BG_BLACK_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_POWER_BG_RED_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_POWER_BG_GREEN_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_POWER_BG_BLUE_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_POWER_BG_PURPLE_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_POWER_BG_GRAY_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_ATTACK_COMMON_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_ATTACK_UNCOMMON_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_ATTACK_RARE_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_SKILL_COMMON_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_SKILL_UNCOMMON_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_SKILL_RARE_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_POWER_COMMON_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_POWER_UNCOMMON_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_FRAME_POWER_RARE_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_BANNER_RARE_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_BANNER_UNCOMMON_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_BANNER_COMMON_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_LOCKED_ATTACK_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_LOCKED_SKILL_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_LOCKED_POWER_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_COMMON_FRAME_LEFT_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_COMMON_FRAME_MID_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_COMMON_FRAME_RIGHT_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_UNCOMMON_FRAME_LEFT_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_UNCOMMON_FRAME_MID_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_UNCOMMON_FRAME_RIGHT_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_RARE_FRAME_LEFT_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_RARE_FRAME_MID_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_RARE_FRAME_RIGHT_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_RED_ORB_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_GREEN_ORB_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_BLUE_ORB_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_PURPLE_ORB_L;
    public static com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion CARD_GRAY_ORB_L;
    public static Texture CARD_LOCKED_ATTACK;
    public static Texture CARD_LOCKED_SKILL;
    public static Texture CARD_LOCKED_POWER;
    public static Texture CONTROLLER_A;
    public static Texture CONTROLLER_B;
    public static Texture CONTROLLER_X;
    public static Texture CONTROLLER_Y;
    public static Texture CONTROLLER_BACK;
    public static Texture CONTROLLER_START;
    public static Texture CONTROLLER_LB;
    public static Texture CONTROLLER_RB;
    public static Texture CONTROLLER_LS;
    public static Texture CONTROLLER_LS_UP;
    public static Texture CONTROLLER_LS_DOWN;
    public static Texture CONTROLLER_LS_LEFT;
    public static Texture CONTROLLER_LS_RIGHT;
    public static Texture CONTROLLER_RS;
    public static Texture CONTROLLER_RS_UP;
    public static Texture CONTROLLER_RS_DOWN;
    public static Texture CONTROLLER_RS_LEFT;
    public static Texture CONTROLLER_RS_RIGHT;
    public static Texture CONTROLLER_D_UP;
    public static Texture CONTROLLER_D_DOWN;
    public static Texture CONTROLLER_D_LEFT;
    public static Texture CONTROLLER_D_RIGHT;
    public static Texture CONTROLLER_LT;
    public static Texture CONTROLLER_RT;
    public static Texture CONTROLLER_HB_HIGHLIGHT;
    public static Texture TIMER_ICON;
    public static Texture TOP_PANEL_BAR;
    public static Texture DECK_COUNT_CIRCLE;
    public static Texture HEALTH_BAR_B;
    public static Texture HEALTH_BAR_L;
    public static Texture HEALTH_BAR_R;
    public static Texture BLOCK_BAR_B;
    public static Texture BLOCK_BAR_R;
    public static Texture BLOCK_BAR_L;
    public static Texture BLOCK_ICON;
    public static Texture BLOCK_ICON_L;
    public static Texture BLOCK_ICON_R;
    public static Texture HB_SHADOW_L;
    public static Texture HB_SHADOW_B;
    public static Texture HB_SHADOW_R;
    public static Texture DRAW_PILE_BANNER;
    public static Texture DISCARD_PILE_BANNER;
    public static Texture DECK_BTN_BASE;
    public static Texture DISCARD_BTN_BASE;
    public static Texture PEEK_BUTTON;
    public static Texture CAMPFIRE_REST_BUTTON;
    public static Texture CAMPFIRE_SMITH_BUTTON;
    public static Texture CAMPFIRE_TOKE_BUTTON;
    public static Texture CAMPFIRE_TRAIN_BUTTON;
    public static Texture CAMPFIRE_DIG_BUTTON;
    public static Texture CAMPFIRE_RECALL_BUTTON;
    public static Texture CAMPFIRE_HOVER_BUTTON;
    public static Texture CF_LEFT_ARROW;
    public static Texture CF_RIGHT_ARROW;
    public static Texture UPGRADE_ARROW;
    public static Texture INTENT_ATK_1;
    public static Texture INTENT_ATK_2;
    public static Texture INTENT_ATK_3;
    public static Texture INTENT_ATK_4;
    public static Texture INTENT_ATK_5;
    public static Texture INTENT_ATK_6;
    public static Texture INTENT_ATK_7;
    public static Texture INTENT_ATK_TIP_1;
    public static Texture INTENT_ATK_TIP_2;
    public static Texture INTENT_ATK_TIP_3;
    public static Texture INTENT_ATK_TIP_4;
    public static Texture INTENT_ATK_TIP_5;
    public static Texture INTENT_ATK_TIP_6;
    public static Texture INTENT_ATK_TIP_7;
    public static Texture INTENT_BUFF;
    public static Texture INTENT_BUFF_L;
    public static Texture INTENT_DEBUFF;
    public static Texture INTENT_DEBUFF_L;
    public static Texture INTENT_DEBUFF2;
    public static Texture INTENT_DEBUFF2_L;
    public static Texture INTENT_DEFEND;
    public static Texture INTENT_DEFEND_L;
    public static Texture INTENT_DEFEND_BUFF;
    public static Texture INTENT_DEFEND_BUFF_L;
    public static Texture INTENT_ESCAPE;
    public static Texture INTENT_ESCAPE_L;
    public static Texture INTENT_MAGIC;
    public static Texture INTENT_MAGIC_L;
    public static Texture INTENT_SLEEP;
    public static Texture INTENT_SLEEP_L;
    public static Texture INTENT_STUN;
    public static Texture INTENT_UNKNOWN;
    public static Texture INTENT_UNKNOWN_L;
    public static Texture INTENT_ATTACK_BUFF;
    public static Texture INTENT_ATTACK_DEBUFF;
    public static Texture INTENT_ATTACK_DEFEND;
    public static Texture CHECKBOX;
    public static Texture TICK;
    public static Texture ORB_DARK;
    public static Texture ORB_LIGHTNING;
    public static Texture ORB_PLASMA;
    public static Texture COLOR_TAB_RED;
    public static Texture COLOR_TAB_GREEN;
    public static Texture COLOR_TAB_BLUE;
    public static Texture COLOR_TAB_PURPLE;
    public static Texture COLOR_TAB_COLORLESS;
    public static Texture COLOR_TAB_CURSE;
    public static Texture COLOR_TAB_BAR;
    public static Texture COLOR_TAB_LOCK;
    public static Texture COLOR_TAB_BOX_UNTICKED;
    public static Texture COLOR_TAB_BOX_TICKED;
    public static Texture FILTER_IRONCLAD;
    public static Texture FILTER_SILENT;
    public static Texture FILTER_DEFECT;
    public static Texture FILTER_WATCHER;
    public static Texture FILTER_FRIENDS;
    public static Texture FILTER_GLOBAL;
    public static Texture FILTER_SCORE;
    public static Texture FILTER_CHAIN;
    public static Texture FILTER_TIME;
    public static Texture P_STANDARD;
    public static Texture P_DAILY;
    public static Texture P_LOOP;
    public static Texture P_INFO_CARD;
    public static Texture P_INFO_RELIC;
    public static Texture P_INFO_POTION;
    public static Texture P_STAT_CHAR;
    public static Texture P_STAT_LEADERBOARD;
    public static Texture P_STAT_HISTORY;
    public static Texture P_SETTING_GAME;
    public static Texture P_SETTING_INPUT;
    public static Texture P_SETTING_CREDITS;
    public static Texture P_LOCK;
    public static Texture MENU_PANEL_BG_GRAY;
    public static Texture MENU_PANEL_BG_RED;
    public static Texture MENU_PANEL_BG_BEIGE;
    public static Texture MENU_PANEL_BG_BLUE;
    public static Texture MENU_PANEL_FRAME;
    public static Texture FILTER_GLOW_BG;
    public static Texture CHAR_OPT_HIGHLIGHT;
    public static Texture RELIC_LINKED;
    public static Texture RELIC_POPUP;
    public static Texture POPUP_ARROW;
    public static Texture RELIC_LOCK;
    public static Texture RELIC_LOCK_OUTLINE;
    public static Texture FILTER_ARROW;
    public static Texture SCROLL_GRADIENT;
    public static Texture WHITE_GRADIENT;
    public static Texture MAP_ICON;
    public static Texture DECK_ICON;
    public static Texture SETTINGS_ICON;
    public static Texture ENDLESS_ICON;
    public static Texture KEY_SLOTS_ICON;
    public static Texture RUBY_KEY;
    public static Texture EMERALD_KEY;
    public static Texture SAPPHIRE_KEY;
    public static Texture RETICLE_CORNER;
    public static Texture TARGET_UI_ARROW;
    public static Texture TARGET_UI_CIRCLE;
    public static Texture LARGE_CLOUD;
    public static Texture SMALL_CLOUD;
    public static Texture SPEECH_BUBBLE_IMG;
    public static Texture SHOP_SPEECH_BUBBLE_IMG;
    public static Texture WHITE_SQUARE_IMG;
    public static Texture MERCHANT_RUG_IMG;
    public static Texture TP_HP;
    public static Texture TP_GOLD;
    public static Texture TP_FLOOR;
    public static Texture TP_ASCENSION;
    public static Texture UI_GOLD;
    public static Texture SETTINGS_BACKGROUND;
    public static Texture OPTION_ABANDON;
    public static Texture OPTION_EXIT;
    public static Texture OPTION_BANNER;
    public static Texture OPTION_TOGGLE;
    public static Texture OPTION_TOGGLE_ON;
    public static Texture OPTION_SLIDER_BG;
    public static Texture OPTION_SLIDER;
    public static Texture OPTION_CONFIRM;
    public static Texture RENAME_BOX;
    public static Texture OPTION_YES;
    public static Texture OPTION_NO;
    public static Texture OPTION_VERTICAL_SLIDER;
    public static Texture SCROLL_BAR_TOP;
    public static Texture SCROLL_BAR_MIDDLE;
    public static Texture SCROLL_BAR_BOTTOM;
    public static Texture SCROLL_BAR_TRAIN;
    public static Texture SCROLL_BAR_LEFT;
    public static Texture SCROLL_BAR_HORIZONTAL_MIDDLE;
    public static Texture SCROLL_BAR_RIGHT;
    public static Texture SCROLL_BAR_HORIZONTAL_TRAIN;
    public static Texture INPUT_SETTINGS_BG;
    public static Texture INPUT_SETTINGS_EDGES;
    public static Texture INPUT_SETTINGS_ROW;
    public static Texture ENERGY_RED_LAYER1;
    public static Texture ENERGY_RED_LAYER2;
    public static Texture ENERGY_RED_LAYER3;
    public static Texture ENERGY_RED_LAYER4;
    public static Texture ENERGY_RED_LAYER5;
    public static Texture ENERGY_RED_LAYER6;
    public static Texture ENERGY_RED_LAYER1D;
    public static Texture ENERGY_RED_LAYER2D;
    public static Texture ENERGY_RED_LAYER3D;
    public static Texture ENERGY_RED_LAYER4D;
    public static Texture ENERGY_RED_LAYER5D;
    public static Texture ENERGY_GREEN_LAYER1;
    public static Texture ENERGY_GREEN_LAYER2;
    public static Texture ENERGY_GREEN_LAYER3;
    public static Texture ENERGY_GREEN_LAYER4;
    public static Texture ENERGY_GREEN_LAYER5;
    public static Texture ENERGY_GREEN_LAYER6;
    public static Texture ENERGY_GREEN_LAYER1D;
    public static Texture ENERGY_GREEN_LAYER2D;
    public static Texture ENERGY_GREEN_LAYER3D;
    public static Texture ENERGY_GREEN_LAYER4D;
    public static Texture ENERGY_GREEN_LAYER5D;
    public static Texture ENERGY_BLUE_LAYER1;
    public static Texture ENERGY_BLUE_LAYER2;
    public static Texture ENERGY_BLUE_LAYER3;
    public static Texture ENERGY_BLUE_LAYER4;
    public static Texture ENERGY_BLUE_LAYER5;
    public static Texture ENERGY_BLUE_LAYER6;
    public static Texture ENERGY_BLUE_LAYER1D;
    public static Texture ENERGY_BLUE_LAYER2D;
    public static Texture ENERGY_BLUE_LAYER3D;
    public static Texture ENERGY_BLUE_LAYER4D;
    public static Texture ENERGY_BLUE_LAYER5D;
    public static Texture ENERGY_PURPLE_LAYER1;
    public static Texture ENERGY_PURPLE_LAYER2;
    public static Texture ENERGY_PURPLE_LAYER3;
    public static Texture ENERGY_PURPLE_LAYER4;
    public static Texture ENERGY_PURPLE_BORDER;
    public static Texture RED_ORB_FLASH_VFX;
    public static Texture GREEN_ORB_FLASH_VFX;
    public static Texture BLUE_ORB_FLASH_VFX;
    public static Texture PURPLE_ORB_FLASH_VFX;
    public static Texture KEYWORD_TOP;
    public static Texture KEYWORD_BODY;
    public static Texture KEYWORD_BOT;
    public static Texture FTUE;
    public static Texture FTUE_BTN;
    public static Texture DYNAMIC_BTN_IMG2;
    public static Texture DYNAMIC_BTN_IMG3;
    public static Texture VICTORY_BANNER;
    public static Texture REWARD_SCREEN_SHEET;
    public static Texture REWARD_SCREEN_TAKE_BUTTON;
    public static Texture REWARD_SCREEN_TAKE_USED_BUTTON;
    public static Texture REWARD_SCREEN_ITEM;
    public static Texture REWARD_CARD_NORMAL;
    public static Texture REWARD_CARD_BOSS;
    public static Texture POTION_UI_BG;
    public static Texture POTION_UI_TOP;
    public static Texture POTION_UI_BOT;
    public static Texture POTION_T_CONTAINER;
    public static Texture POTION_T_LIQUID;
    public static Texture POTION_T_HYBRID;
    public static Texture POTION_T_SPOTS;
    public static Texture POTION_T_OUTLINE;
    public static Texture POTION_S_CONTAINER;
    public static Texture POTION_S_LIQUID;
    public static Texture POTION_S_HYBRID;
    public static Texture POTION_S_SPOTS;
    public static Texture POTION_S_OUTLINE;
    public static Texture POTION_M_CONTAINER;
    public static Texture POTION_M_LIQUID;
    public static Texture POTION_M_HYBRID;
    public static Texture POTION_M_SPOTS;
    public static Texture POTION_M_OUTLINE;
    public static Texture POTION_SPHERE_CONTAINER;
    public static Texture POTION_SPHERE_LIQUID;
    public static Texture POTION_SPHERE_HYBRID;
    public static Texture POTION_SPHERE_SPOTS;
    public static Texture POTION_SPHERE_OUTLINE;
    public static Texture POTION_H_CONTAINER;
    public static Texture POTION_H_LIQUID;
    public static Texture POTION_H_HYBRID;
    public static Texture POTION_H_SPOTS;
    public static Texture POTION_H_OUTLINE;
    public static Texture POTION_BOTTLE_CONTAINER;
    public static Texture POTION_BOTTLE_LIQUID;
    public static Texture POTION_BOTTLE_HYBRID;
    public static Texture POTION_BOTTLE_SPOTS;
    public static Texture POTION_BOTTLE_OUTLINE;
    public static Texture POTION_HEART_CONTAINER;
    public static Texture POTION_HEART_LIQUID;
    public static Texture POTION_HEART_HYBRID;
    public static Texture POTION_HEART_SPOTS;
    public static Texture POTION_HEART_OUTLINE;
    public static Texture POTION_SNECKO_CONTAINER;
    public static Texture POTION_SNECKO_LIQUID;
    public static Texture POTION_SNECKO_HYBRID;
    public static Texture POTION_SNECKO_SPOTS;
    public static Texture POTION_SNECKO_OUTLINE;
    public static Texture POTION_FAIRY_CONTAINER;
    public static Texture POTION_FAIRY_LIQUID;
    public static Texture POTION_FAIRY_HYBRID;
    public static Texture POTION_FAIRY_SPOTS;
    public static Texture POTION_FAIRY_OUTLINE;
    public static Texture POTION_GHOST_CONTAINER;
    public static Texture POTION_GHOST_LIQUID;
    public static Texture POTION_GHOST_HYBRID;
    public static Texture POTION_GHOST_SPOTS;
    public static Texture POTION_GHOST_OUTLINE;
    public static Texture POTION_JAR_CONTAINER;
    public static Texture POTION_JAR_LIQUID;
    public static Texture POTION_JAR_HYBRID;
    public static Texture POTION_JAR_SPOTS;
    public static Texture POTION_JAR_OUTLINE;
    public static Texture POTION_BOLT_CONTAINER;
    public static Texture POTION_BOLT_LIQUID;
    public static Texture POTION_BOLT_HYBRID;
    public static Texture POTION_BOLT_SPOTS;
    public static Texture POTION_BOLT_OUTLINE;
    public static Texture POTION_CARD_CONTAINER;
    public static Texture POTION_CARD_LIQUID;
    public static Texture POTION_CARD_HYBRID;
    public static Texture POTION_CARD_SPOTS;
    public static Texture POTION_CARD_OUTLINE;
    public static Texture POTION_MOON_CONTAINER;
    public static Texture POTION_MOON_LIQUID;
    public static Texture POTION_MOON_HYBRID;
    public static Texture POTION_MOON_OUTLINE;
    public static Texture POTION_SPIKY_CONTAINER;
    public static Texture POTION_SPIKY_LIQUID;
    public static Texture POTION_SPIKY_HYBRID;
    public static Texture POTION_SPIKY_OUTLINE;
    public static Texture POTION_EYE_CONTAINER;
    public static Texture POTION_EYE_LIQUID;
    public static Texture POTION_EYE_HYBRID;
    public static Texture POTION_EYE_OUTLINE;
    public static Texture POTION_ANVIL_CONTAINER;
    public static Texture POTION_ANVIL_LIQUID;
    public static Texture POTION_ANVIL_HYBRID;
    public static Texture POTION_ANVIL_OUTLINE;
    public static Texture POTION_PLACEHOLDER;
    private static final String BUTTON_DIR = "images/ui/topPanel/";
    public static Texture EVENT_BUTTON_ENABLED;
    public static Texture EVENT_BUTTON_DISABLED;
    public static Texture UNLOCK_TEXT_BG;
    public static Texture EVENT_IMG_FRAME;
    public static Texture EVENT_ROOM_PANEL;
    public static Texture CANCEL_BUTTON;
    public static Texture CANCEL_BUTTON_SHADOW;
    public static Texture CANCEL_BUTTON_OUTLINE;
    public static Texture CONFIRM_BUTTON;
    public static Texture CONFIRM_BUTTON_SHADOW;
    public static Texture CONFIRM_BUTTON_OUTLINE;
    public static Texture PROCEED_BUTTON;
    public static Texture PROCEED_BUTTON_SHADOW;
    public static Texture PROCEED_BUTTON_OUTLINE;
    public static Texture END_TURN_BUTTON;
    public static Texture END_TURN_BUTTON_GLOW;
    public static Texture END_TURN_HOVER;
    public static Texture GHOST_ORB_1;
    public static Texture GHOST_ORB_2;
    public static Texture WARNING_ICON_VFX;
    public static Texture SPOTLIGHT_VFX;
    public static Texture DEBUG_HITBOX_IMG;
    public static Texture WOBBLY_ORB_VFX;
    public static Texture ANIMATED_SLASH_VFX;
    public static Texture DEBUFF_VFX_1;
    public static Texture DEBUFF_VFX_2;
    public static Texture DEBUFF_VFX_3;
    public static Texture FLAME_ANIM_1;
    public static Texture FLAME_ANIM_2;
    public static Texture FLAME_ANIM_3;
    public static Texture FLAME_ANIM_4;
    public static Texture FLAME_ANIM_5;
    public static Texture FLAME_ANIM_6;
    public static Texture HORIZONTAL_LINE;
    public static Texture WEB_VFX;
    public static Texture PETAL_VFX[] = new Texture[4];
    public static Texture WATER_DROP_VFX[] = new Texture[6];
    public static Texture FROST_ORB_RIGHT;
    public static Texture FROST_ORB_LEFT;
    public static Texture FROST_ORB_MIDDLE;
    public static Texture FROST_ACTIVATE_VFX_1;
    public static Texture FROST_ACTIVATE_VFX_2;
    public static Texture FROST_ACTIVATE_VFX_3;
    public static Texture ORB_SLOT_1;
    public static Texture ORB_SLOT_2;
    public static ArrayList LIGHTNING_PASSIVE_VFX = new ArrayList();
    public static Texture DARK_ORB_ACTIVATE_VFX;
    public static Texture DARK_ORB_PASSIVE_VFX_1;
    public static Texture DARK_ORB_PASSIVE_VFX_2;
    public static Texture DARK_ORB_PASSIVE_VFX_3;
    public static Texture MAP_NODE_ELITE;
    public static Texture MAP_NODE_ELITE_OUTLINE;
    public static Texture MAP_NODE_ENEMY;
    public static Texture MAP_NODE_ENEMY_OUTLINE;
    public static Texture MAP_NODE_REST;
    public static Texture MAP_NODE_REST_OUTLINE;
    public static Texture MAP_NODE_TREASURE;
    public static Texture MAP_NODE_TREASURE_OUTLINE;
    public static Texture MAP_NODE_MERCHANT;
    public static Texture MAP_NODE_MERCHANT_OUTLINE;
    public static Texture MAP_LEGEND;
    public static Texture MAP_CIRCLE_1;
    public static Texture MAP_CIRCLE_2;
    public static Texture MAP_CIRCLE_3;
    public static Texture MAP_CIRCLE_4;
    public static Texture MAP_CIRCLE_5;
    public static Texture MAP_NODE_EVENT;
    public static Texture MAP_NODE_EVENT_OUTLINE;
    public static Texture MAP_DOT_1;
    public static Texture TINY_CARD_ATTACK;
    public static Texture TINY_CARD_SKILL;
    public static Texture TINY_CARD_POWER;
    public static Texture TINY_CARD_PORTRAIT_SHADOW;
    public static Texture TINY_CARD_BACKGROUND;
    public static Texture TINY_CARD_BANNER;
    public static Texture TINY_CARD_BANNER_SHADOW;
    public static Texture TINY_CARD_DESCRIPTION;
    public static Texture RUN_HISTORY_MAP_ICON_BOSS;
    public static Texture RUN_HISTORY_MAP_ICON_CHEST;
    public static Texture RUN_HISTORY_MAP_ICON_BOSS_CHEST;
    public static Texture RUN_HISTORY_MAP_ICON_ELITE;
    public static Texture RUN_HISTORY_MAP_ICON_EVENT;
    public static Texture RUN_HISTORY_MAP_ICON_MONSTER;
    public static Texture RUN_HISTORY_MAP_ICON_REST;
    public static Texture RUN_HISTORY_MAP_ICON_SHOP;
    public static Texture RUN_HISTORY_MAP_ICON_UNKNOWN_CHEST;
    public static Texture RUN_HISTORY_MAP_ICON_UNKNOWN_MONSTER;
    public static Texture RUN_HISTORY_MAP_ICON_UNKNOWN_SHOP;
    public static HashMap relicImages = new HashMap();
    public static HashMap relicOutlineImages = new HashMap();
    public static Texture BOSS_CHEST;
    public static Texture BOSS_CHEST_OPEN;
    public static Texture BOSS_CHEST_SMOKE;
    public static Texture L_CHEST;
    public static Texture L_CHEST_OPEN;
    public static Texture M_CHEST;
    public static Texture M_CHEST_OPEN;
    public static Texture S_CHEST;
    public static Texture S_CHEST_OPEN;
    static final boolean $assertionsDisabled = !com/megacrit/cardcrawl/helpers/ImageMaster.desiredAssertionStatus();

}
